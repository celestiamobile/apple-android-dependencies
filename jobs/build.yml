jobs:
- job: Build
  displayName: 'Build'
  timeoutInMinutes: 120
  pool:
    vmImage: macos-13

  variables:
    buildTarget: ${{ parameters.buildTarget }}
    xcodeVersion: ${{ '14.3.1' }}
    ndkVersion: ${{ '25.2.9519653' }}

  steps:
  - script: brew install meson wget
    displayName: 'Install Dependencies'

  - script: sh ./download.sh
    displayName: 'Download'

  - script: |
      TO_REPLACE="Xcode.app"
      NEW_STRING="Xcode_$(xcodeVersion).app"
      sed -ie "s#${TO_REPLACE}#${NEW_STRING}#g" *.txt
      TO_REPLACE="/Users/linfel/Library/Android/sdk/ndk/25.1.8937393"
      NEW_STRING="$ANDROID_HOME/ndk/$(ndkVersion)"
      sed -ie "s#${TO_REPLACE}#${NEW_STRING}#g" *.txt
      if [ "$(buildTarget)" == "emscripten" ]; then
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        TO_REPLACE="/Users/linfel/Developer/Personal/Celestia/emsdk"
        NEW_STRING=$(pwd)
        cd ..
        sed -ie "s#${TO_REPLACE}#${NEW_STRING}#g" emscripten.txt
      fi
    displayName: 'Replace Strings'

  - script: |
      if [ "$(buildTarget)" == "emscripten" ]; then
        cd emsdk
        source ./emsdk_env.sh
        cd ..
      fi
      export NDK=$ANDROID_HOME/ndk/$(ndkVersion)
      sudo xcode-select -s /Applications/Xcode_$(xcodeVersion).app
      sh ./prepare_icu.sh
      sh ./build_$(buildTarget).sh
    displayName: 'Build'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(buildTarget)'
      ArtifactName: '$(buildTarget)'
      publishLocation: 'Container'
    displayName: 'Publish'

  - task: UniversalPackages@0
    inputs:
      command: 'publish'
      publishDirectory: '$(buildTarget)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: '9f9dcde1-dcba-4537-8214-71c8a03b99a0/14bb1031-e6b2-40ac-b287-73e7fcb5900e'
      vstsFeedPackagePublish: 'celestia-$(buildTarget)-dependencies'
      versionOption: 'patch'
    condition: and(or(eq( variables['buildTarget'], 'ios' ), eq( variables['buildTarget'], 'catalyst' ), eq( variables['buildTarget'], 'android' )), eq(variables['publish'], 'true'))
